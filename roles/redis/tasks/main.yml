---
# tasks file for redis

- name: Create
  ansible.builtin.group:
    name: "{{ redis_group }}"
    state: present
    system: yes
  when: redis_create_user_group | bool

- name: "Create {{ container_name }} user"
  user:
    name: '{{ redis_user }}'
    group: '{{ redis_group }}'
    state: present
    createhome: yes
    system: yes
  when: redis_create_user_group | bool

- name: Update apt on all Debian/Ubuntu boxes
  ansible.builtin.apt:
    name: "*"
    state: latest

- name: Upgrade all packages on servers
  ansible.builtin.apt:
    upgrade: dist
    force_apt_get: yes

- name: Install required packages gnupg, gcc, g++, cmake
  apt:
    name:
      - gnupg
      - gcc
      - g++
      - cmake
    state: latest

- name: Download https://download.redis.io/releases/redis-6.2.6.tar.gz
  ansible.builtin.get_url:
    url: https://download.redis.io/releases/redis-6.2.6.tar.gz
    dest: '/home/{{ redis_user }}/redis-6.2.6.tar.gz'
    mode: '770'

- name: Extract /home/{{ redis_user }}/redis-6.2.6.tar.gz into /home/{{ redis_user }}/redis-6.2.6
  ansible.builtin.unarchive:
    src: '/home/{{ redis_user }}/redis-6.2.6.tar.gz'
    dest: '/home/{{ redis_user }}'
    remote_src: yes

- name: Building Redis source 6.2.6
  shell:
    "cd /home/{{ redis_user }}/redis-6.2.6 && make"

- name: Install redis 6.2.6
  shell:
    "cd /home/{{ redis_user }}/redis-6.2.6 && make install"

- name: Clean redis sources
  ansible.builtin.shell: "rm -R /home/{{ redis_user }}/redis*"

- name: Template {{service_name}} systemd service
  template:
    src: redis.service.j2
    dest: '{{ redis_unit_path }}'
    group: '{{ redis_group }}'
    owner: '{{ redis_user }}'
    mode: 0644
  notify:
    - Restart Redis please
  when: ansible_os_family == "RedHat" and ansible_distribution_major_version > '6' or ansible_os_family == "Debian"

- name: Start and Enable the {{service_name}} service
  ansible.builtin.systemd:
    name: redis
    state: started
    enabled: yes
